#!/bin/false

# Copyright (c) 2022 VÃ­t Labuda. All rights reserved.
#
# Redistribution and use in source and binary forms, with or without modification, are permitted provided that the
# following conditions are met:
#  1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following
#     disclaimer.
#  2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the
#     following disclaimer in the documentation and/or other materials provided with the distribution.
#  3. Neither the name of the copyright holder nor the names of its contributors may be used to endorse or promote
#     products derived from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
# INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.


import os.path
import sys
__TESTS_DIR = os.path.dirname(os.path.realpath(__file__))  
__MODULE_DIR = os.path.realpath(os.path.join(__TESTS_DIR, "../.."))  
if __TESTS_DIR not in sys.path:  
    sys.path.insert(0, __TESTS_DIR)  
if __MODULE_DIR not in sys.path:  
    sys.path.insert(0, __MODULE_DIR)  

import theoretical_testutils
import pytest
import datetime
import ipaddress
import urllib.parse
import uuid
from datalidator.blueprints.ParsingMode import ParsingMode
from datalidator.blueprints.impl.FloatBlueprint import FloatBlueprint
from datalidator.blueprints.exc.InvalidInputDataExc import InvalidInputDataExc
from datalidator.blueprints.exc.InputDataNotConvertibleExc import InputDataNotConvertibleExc
from datalidator.blueprints.exc.InputDataTypeNotInAllowlistExc import InputDataTypeNotInAllowlistExc
from datalidator.blueprints.exc.UnexpectedOutputDataTypeExc import UnexpectedOutputDataTypeExc
from datalidator.filters.impl.NumberAbsoluteValueFilter import NumberAbsoluteValueFilter
from datalidator.filters.impl.NumberMaximumClampFilter import NumberMaximumClampFilter
from datalidator.filters.impl.NumberMinimumClampFilter import NumberMinimumClampFilter
from datalidator.filters.impl.NumberRoundFilter import NumberRoundFilter
from datalidator.filters.exc.err.InvalidFilterConfigError import InvalidFilterConfigError
from datalidator.validators.impl.NumberMaximumValueValidator import NumberMaximumValueValidator
from datalidator.validators.impl.NumberMinimumValueValidator import NumberMinimumValueValidator
from datalidator.validators.exc.DataValidationFailedExc import DataValidationFailedExc
from datalidator.validators.exc.err.InvalidValidatorConfigError import InvalidValidatorConfigError


# Because for example: 0 == 0.0 == -0.0
def expected_output_float_value(value: str):  # DP: Factory
    return lambda output: (output.__class__ is float) and (str(output) == value)


class FloatableObject:
    def __init__(self, returned_float):
        self.__returned_float = returned_float

    def __float__(self):
        return self.__returned_float


class ExceptionRaisingFloatableObject:
    def __float__(self):
        raise theoretical_testutils.TestException()


__FLOAT_BLUEPRINT_TEST_SUITE = (
    (FloatBlueprint(parsing_mode=ParsingMode.MODE_LOOSE), (
        (0.0, expected_output_float_value("0.0")),
        (-0.0, expected_output_float_value("0.0")),
        (1.0, expected_output_float_value("1.0")),
        (-1.0, expected_output_float_value("-1.0")),
        (123.456, expected_output_float_value("123.456")),
        (-123.456, expected_output_float_value("-123.456")),
        (float("nan"), InvalidInputDataExc),
        (float("+NAN"), InvalidInputDataExc),
        (float("-NAN"), InvalidInputDataExc),
        (float("inf"), InvalidInputDataExc),
        (float("+INFINITY"), InvalidInputDataExc),
        (float("-INFINITY"), InvalidInputDataExc),
        (0, expected_output_float_value("0.0")),
        (-0, expected_output_float_value("0.0")),
        (1, expected_output_float_value("1.0")),
        (-1, expected_output_float_value("-1.0")),
        (123, expected_output_float_value("123.0")),
        (-123, expected_output_float_value("-123.0")),
        (True, expected_output_float_value("1.0")),
        (False, expected_output_float_value("0.0")),
        ("0.0", expected_output_float_value("0.0")),
        ("+0.0", expected_output_float_value("0.0")),
        ("-0.0", expected_output_float_value("0.0")),
        ("1.0", expected_output_float_value("1.0")),
        ("+1.0", expected_output_float_value("1.0")),
        ("-1.0", expected_output_float_value("-1.0")),
        ("123.456", expected_output_float_value("123.456")),
        ("+123.456", expected_output_float_value("123.456")),
        ("-123.456", expected_output_float_value("-123.456")),
        ("000123.456", expected_output_float_value("123.456")),
        ("+000123.456", expected_output_float_value("123.456")),
        ("-000123.456", expected_output_float_value("-123.456")),
        ("123.456000", expected_output_float_value("123.456")),
        ("+123.456000", expected_output_float_value("123.456")),
        ("-123.456000", expected_output_float_value("-123.456")),
        ("000123.456000", expected_output_float_value("123.456")),
        ("+000123.456000", expected_output_float_value("123.456")),
        ("-000123.456000", expected_output_float_value("-123.456")),
        ("nan", InvalidInputDataExc),
        ("+NAN", InvalidInputDataExc),
        ("-NAN", InvalidInputDataExc),
        ("inf", InvalidInputDataExc),
        ("+INFINITY", InvalidInputDataExc),
        ("-INFINITY", InvalidInputDataExc),
        ("0", expected_output_float_value("0.0")),
        ("+0", expected_output_float_value("0.0")),
        ("-0", expected_output_float_value("0.0")),
        ("1", expected_output_float_value("1.0")),
        ("+1", expected_output_float_value("1.0")),
        ("-1", expected_output_float_value("-1.0")),
        ("123", expected_output_float_value("123.0")),
        ("+123", expected_output_float_value("123.0")),
        ("-123", expected_output_float_value("-123.0")),
        ("000123", expected_output_float_value("123.0")),
        ("+000123", expected_output_float_value("123.0")),
        ("-000123", expected_output_float_value("-123.0")),
        ("123_000", expected_output_float_value("123000.0")),
        ("+123_000", expected_output_float_value("123000.0")),
        ("-123_000", expected_output_float_value("-123000.0")),
        ("1e6", expected_output_float_value("1000000.0")),
        ("+1e6", expected_output_float_value("1000000.0")),
        ("-1e6", expected_output_float_value("-1000000.0")),
        ("123.0", expected_output_float_value("123.0")),
        ("123,0", expected_output_float_value("123.0")),
        ("+123.0", expected_output_float_value("123.0")),
        ("+123,0", expected_output_float_value("123.0")),
        ("-123.0", expected_output_float_value("-123.0")),
        ("-123,0", expected_output_float_value("-123.0")),
        ("\r\n777.888\t", expected_output_float_value("777.888")),
        ("  555 ", expected_output_float_value("555.0")),
        ("888,1337", expected_output_float_value("888.1337")),
        ("   444,987\n", expected_output_float_value("444.987")),
        ("1337.", expected_output_float_value("1337.0")),
        (".2337", expected_output_float_value("0.2337")),
        ("1337,", expected_output_float_value("1337.0")),
        (",2337", expected_output_float_value("0.2337")),
        ("  1337.\n", expected_output_float_value("1337.0")),
        ("\t.2337\r\n", expected_output_float_value("0.2337")),
        ("\r\n1337,   ", expected_output_float_value("1337.0")),
        ("\f\f ,2337\v", expected_output_float_value("0.2337")),
        ("+1337.", expected_output_float_value("1337.0")),
        ("+.2337", expected_output_float_value("0.2337")),
        ("+1337,", expected_output_float_value("1337.0")),
        ("+,2337", expected_output_float_value("0.2337")),
        ("  +1337.\n", expected_output_float_value("1337.0")),
        ("\t+.2337\r\n", expected_output_float_value("0.2337")),
        ("\r\n+1337,   ", expected_output_float_value("1337.0")),
        ("\f\f +,2337\v", expected_output_float_value("0.2337")),
        ("-1337.", expected_output_float_value("-1337.0")),
        ("-.2337", expected_output_float_value("-0.2337")),
        ("-1337,", expected_output_float_value("-1337.0")),
        ("-,2337", expected_output_float_value("-0.2337")),
        ("  -1337.\n", expected_output_float_value("-1337.0")),
        ("\t-.2337\r\n", expected_output_float_value("-0.2337")),
        ("\r\n-1337,   ", expected_output_float_value("-1337.0")),
        ("\f\f -,2337\v", expected_output_float_value("-0.2337")),
        ("", InputDataNotConvertibleExc),
        ("  \r ", InputDataNotConvertibleExc),
        ("hello", InputDataNotConvertibleExc),
        ("   hello world  ", InputDataNotConvertibleExc),
        (" n jnfmsdnk\tfasdfsaf\rcy ", InputDataNotConvertibleExc),
        ("\x00", InputDataNotConvertibleExc),
        (".", InputDataNotConvertibleExc),
        ("123..456", InputDataNotConvertibleExc),
        ("123..", InputDataNotConvertibleExc),
        ("..456", InputDataNotConvertibleExc),
        ("+.", InputDataNotConvertibleExc),
        ("+123..456", InputDataNotConvertibleExc),
        ("+123..", InputDataNotConvertibleExc),
        ("+..456", InputDataNotConvertibleExc),
        ("-.", InputDataNotConvertibleExc),
        ("-123..456", InputDataNotConvertibleExc),
        ("-123..", InputDataNotConvertibleExc),
        ("-..456", InputDataNotConvertibleExc),
        (",", InputDataNotConvertibleExc),
        ("123,,456", InputDataNotConvertibleExc),
        ("123,,", InputDataNotConvertibleExc),
        (",,456", InputDataNotConvertibleExc),
        ("+,", InputDataNotConvertibleExc),
        ("+123,,456", InputDataNotConvertibleExc),
        ("+123,,", InputDataNotConvertibleExc),
        ("+,,456", InputDataNotConvertibleExc),
        ("-,", InputDataNotConvertibleExc),
        ("-123,,456", InputDataNotConvertibleExc),
        ("-123,,", InputDataNotConvertibleExc),
        ("-,,456", InputDataNotConvertibleExc),
        ("+", InputDataNotConvertibleExc),
        ("-", InputDataNotConvertibleExc),
        ("++123.456", InputDataNotConvertibleExc),
        ("--123.456", InputDataNotConvertibleExc),
        ("123.456+", InputDataNotConvertibleExc),
        ("123.456-", InputDataNotConvertibleExc),
        ("++123,456", InputDataNotConvertibleExc),
        ("--123,456", InputDataNotConvertibleExc),
        ("123,456+", InputDataNotConvertibleExc),
        ("123,456-", InputDataNotConvertibleExc),
        ("123 456", InputDataNotConvertibleExc),
        ("123. 456", InputDataNotConvertibleExc),
        ("123 .456", InputDataNotConvertibleExc),
        ("123 . 456", InputDataNotConvertibleExc),
        ("123, 456", InputDataNotConvertibleExc),
        ("123 ,456", InputDataNotConvertibleExc),
        ("123 , 456", InputDataNotConvertibleExc),
        ("123.456\x00", InputDataNotConvertibleExc),
        ("123,456\x00", InputDataNotConvertibleExc),
        ("\x00123.456", InputDataNotConvertibleExc),
        ("\x00123,456", InputDataNotConvertibleExc),
        ("i123.456", InputDataNotConvertibleExc),
        ("123.456i", InputDataNotConvertibleExc),
        ("i123,456", InputDataNotConvertibleExc),
        ("123,456i", InputDataNotConvertibleExc),
        ("0x123", InputDataNotConvertibleExc),
        ("0o123", InputDataNotConvertibleExc),
        ("0b111", InputDataNotConvertibleExc),
        ([], InputDataNotConvertibleExc),
        ({}, InputDataNotConvertibleExc),
        ([1, 2], InputDataNotConvertibleExc),
        ({1: 2}, InputDataNotConvertibleExc),
        (None, InputDataNotConvertibleExc),
        (b'', InputDataNotConvertibleExc),
        (b'\x00', InputDataNotConvertibleExc),
        (b'\x01', InputDataNotConvertibleExc),
        (b'123', expected_output_float_value("123.0")),
        (b'-123', expected_output_float_value("-123.0")),
        (b'123.123', expected_output_float_value("123.123")),
        (b'-123.123', expected_output_float_value("-123.123")),
        (int, InputDataNotConvertibleExc),
        (theoretical_testutils.EmptyObject, InputDataNotConvertibleExc),
        (datetime.datetime.now(), InputDataNotConvertibleExc),
        (datetime.datetime.now().date(), InputDataNotConvertibleExc),
        (datetime.datetime.now().time(), InputDataNotConvertibleExc),
        (ipaddress.ip_address("127.0.0.1"), InputDataNotConvertibleExc),
        (ipaddress.ip_address("::1"), InputDataNotConvertibleExc),
        (ipaddress.ip_network("127.0.0.0/8"), InputDataNotConvertibleExc),
        (ipaddress.ip_network("2001:db8::/32"), InputDataNotConvertibleExc),
        (urllib.parse.urlparse("https://www.google.com/test"), InputDataNotConvertibleExc),
        (uuid.UUID('{12345678-1234-5678-1234-567812345678}'), InputDataNotConvertibleExc),
        (theoretical_testutils.EmptyObject(), InputDataNotConvertibleExc),
        (FloatableObject(123.999), expected_output_float_value("123.999")),
        (FloatableObject(123), InputDataNotConvertibleExc),
        (FloatableObject(True), InputDataNotConvertibleExc),
        (FloatableObject("123.999"), InputDataNotConvertibleExc),
        (FloatableObject(None), InputDataNotConvertibleExc),
        (FloatableObject([]), InputDataNotConvertibleExc),
        (FloatableObject(theoretical_testutils.EmptyObject()), InputDataNotConvertibleExc),
        (ExceptionRaisingFloatableObject(), InputDataNotConvertibleExc)
    )),
    (FloatBlueprint(parsing_mode=ParsingMode.MODE_RATIONAL), (
        (0.0, expected_output_float_value("0.0")),
        (-0.0, expected_output_float_value("0.0")),
        (1.0, expected_output_float_value("1.0")),
        (-1.0, expected_output_float_value("-1.0")),
        (123.456, expected_output_float_value("123.456")),
        (-123.456, expected_output_float_value("-123.456")),
        (float("nan"), InvalidInputDataExc),
        (float("+NAN"), InvalidInputDataExc),
        (float("-NAN"), InvalidInputDataExc),
        (float("inf"), InvalidInputDataExc),
        (float("+INFINITY"), InvalidInputDataExc),
        (float("-INFINITY"), InvalidInputDataExc),
        (0, expected_output_float_value("0.0")),
        (-0, expected_output_float_value("0.0")),
        (1, expected_output_float_value("1.0")),
        (-1, expected_output_float_value("-1.0")),
        (123, expected_output_float_value("123.0")),
        (-123, expected_output_float_value("-123.0")),
        (True, expected_output_float_value("1.0")),
        (False, expected_output_float_value("0.0")),
        ("0.0", expected_output_float_value("0.0")),
        ("+0.0", expected_output_float_value("0.0")),
        ("-0.0", expected_output_float_value("0.0")),
        ("1.0", expected_output_float_value("1.0")),
        ("+1.0", expected_output_float_value("1.0")),
        ("-1.0", expected_output_float_value("-1.0")),
        ("123.456", expected_output_float_value("123.456")),
        ("+123.456", expected_output_float_value("123.456")),
        ("-123.456", expected_output_float_value("-123.456")),
        ("000123.456", expected_output_float_value("123.456")),
        ("+000123.456", expected_output_float_value("123.456")),
        ("-000123.456", expected_output_float_value("-123.456")),
        ("123.456000", expected_output_float_value("123.456")),
        ("+123.456000", expected_output_float_value("123.456")),
        ("-123.456000", expected_output_float_value("-123.456")),
        ("000123.456000", expected_output_float_value("123.456")),
        ("+000123.456000", expected_output_float_value("123.456")),
        ("-000123.456000", expected_output_float_value("-123.456")),
        ("nan", InvalidInputDataExc),
        ("+NAN", InvalidInputDataExc),
        ("-NAN", InvalidInputDataExc),
        ("inf", InvalidInputDataExc),
        ("+INFINITY", InvalidInputDataExc),
        ("-INFINITY", InvalidInputDataExc),
        ("0", expected_output_float_value("0.0")),
        ("+0", expected_output_float_value("0.0")),
        ("-0", expected_output_float_value("0.0")),
        ("1", expected_output_float_value("1.0")),
        ("+1", expected_output_float_value("1.0")),
        ("-1", expected_output_float_value("-1.0")),
        ("123", expected_output_float_value("123.0")),
        ("+123", expected_output_float_value("123.0")),
        ("-123", expected_output_float_value("-123.0")),
        ("000123", expected_output_float_value("123.0")),
        ("+000123", expected_output_float_value("123.0")),
        ("-000123", expected_output_float_value("-123.0")),
        ("123_000", expected_output_float_value("123000.0")),
        ("+123_000", expected_output_float_value("123000.0")),
        ("-123_000", expected_output_float_value("-123000.0")),
        ("1e6", expected_output_float_value("1000000.0")),
        ("+1e6", expected_output_float_value("1000000.0")),
        ("-1e6", expected_output_float_value("-1000000.0")),
        ("123.0", expected_output_float_value("123.0")),
        ("123,0", expected_output_float_value("123.0")),
        ("+123.0", expected_output_float_value("123.0")),
        ("+123,0", expected_output_float_value("123.0")),
        ("-123.0", expected_output_float_value("-123.0")),
        ("-123,0", expected_output_float_value("-123.0")),
        ("\r\n777.888\t", expected_output_float_value("777.888")),
        ("  555 ", expected_output_float_value("555.0")),
        ("888,1337", expected_output_float_value("888.1337")),
        ("   444,987\n", expected_output_float_value("444.987")),
        ("1337.", expected_output_float_value("1337.0")),
        (".2337", expected_output_float_value("0.2337")),
        ("1337,", expected_output_float_value("1337.0")),
        (",2337", expected_output_float_value("0.2337")),
        ("  1337.\n", expected_output_float_value("1337.0")),
        ("\t.2337\r\n", expected_output_float_value("0.2337")),
        ("\r\n1337,   ", expected_output_float_value("1337.0")),
        ("\f\f ,2337\v", expected_output_float_value("0.2337")),
        ("+1337.", expected_output_float_value("1337.0")),
        ("+.2337", expected_output_float_value("0.2337")),
        ("+1337,", expected_output_float_value("1337.0")),
        ("+,2337", expected_output_float_value("0.2337")),
        ("  +1337.\n", expected_output_float_value("1337.0")),
        ("\t+.2337\r\n", expected_output_float_value("0.2337")),
        ("\r\n+1337,   ", expected_output_float_value("1337.0")),
        ("\f\f +,2337\v", expected_output_float_value("0.2337")),
        ("-1337.", expected_output_float_value("-1337.0")),
        ("-.2337", expected_output_float_value("-0.2337")),
        ("-1337,", expected_output_float_value("-1337.0")),
        ("-,2337", expected_output_float_value("-0.2337")),
        ("  -1337.\n", expected_output_float_value("-1337.0")),
        ("\t-.2337\r\n", expected_output_float_value("-0.2337")),
        ("\r\n-1337,   ", expected_output_float_value("-1337.0")),
        ("\f\f -,2337\v", expected_output_float_value("-0.2337")),
        ("", InputDataNotConvertibleExc),
        ("  \r ", InputDataNotConvertibleExc),
        ("hello", InputDataNotConvertibleExc),
        ("   hello world  ", InputDataNotConvertibleExc),
        (" n jnfmsdnk\tfasdfsaf\rcy ", InputDataNotConvertibleExc),
        ("\x00", InputDataNotConvertibleExc),
        (".", InputDataNotConvertibleExc),
        ("123..456", InputDataNotConvertibleExc),
        ("123..", InputDataNotConvertibleExc),
        ("..456", InputDataNotConvertibleExc),
        ("+.", InputDataNotConvertibleExc),
        ("+123..456", InputDataNotConvertibleExc),
        ("+123..", InputDataNotConvertibleExc),
        ("+..456", InputDataNotConvertibleExc),
        ("-.", InputDataNotConvertibleExc),
        ("-123..456", InputDataNotConvertibleExc),
        ("-123..", InputDataNotConvertibleExc),
        ("-..456", InputDataNotConvertibleExc),
        (",", InputDataNotConvertibleExc),
        ("123,,456", InputDataNotConvertibleExc),
        ("123,,", InputDataNotConvertibleExc),
        (",,456", InputDataNotConvertibleExc),
        ("+,", InputDataNotConvertibleExc),
        ("+123,,456", InputDataNotConvertibleExc),
        ("+123,,", InputDataNotConvertibleExc),
        ("+,,456", InputDataNotConvertibleExc),
        ("-,", InputDataNotConvertibleExc),
        ("-123,,456", InputDataNotConvertibleExc),
        ("-123,,", InputDataNotConvertibleExc),
        ("-,,456", InputDataNotConvertibleExc),
        ("+", InputDataNotConvertibleExc),
        ("-", InputDataNotConvertibleExc),
        ("++123.456", InputDataNotConvertibleExc),
        ("--123.456", InputDataNotConvertibleExc),
        ("123.456+", InputDataNotConvertibleExc),
        ("123.456-", InputDataNotConvertibleExc),
        ("++123,456", InputDataNotConvertibleExc),
        ("--123,456", InputDataNotConvertibleExc),
        ("123,456+", InputDataNotConvertibleExc),
        ("123,456-", InputDataNotConvertibleExc),
        ("123 456", InputDataNotConvertibleExc),
        ("123. 456", InputDataNotConvertibleExc),
        ("123 .456", InputDataNotConvertibleExc),
        ("123 . 456", InputDataNotConvertibleExc),
        ("123, 456", InputDataNotConvertibleExc),
        ("123 ,456", InputDataNotConvertibleExc),
        ("123 , 456", InputDataNotConvertibleExc),
        ("123.456\x00", InputDataNotConvertibleExc),
        ("123,456\x00", InputDataNotConvertibleExc),
        ("\x00123.456", InputDataNotConvertibleExc),
        ("\x00123,456", InputDataNotConvertibleExc),
        ("i123.456", InputDataNotConvertibleExc),
        ("123.456i", InputDataNotConvertibleExc),
        ("i123,456", InputDataNotConvertibleExc),
        ("123,456i", InputDataNotConvertibleExc),
        ("0x123", InputDataNotConvertibleExc),
        ("0o123", InputDataNotConvertibleExc),
        ("0b111", InputDataNotConvertibleExc),
        ([], InputDataTypeNotInAllowlistExc),
        ({}, InputDataTypeNotInAllowlistExc),
        ([1, 2], InputDataTypeNotInAllowlistExc),
        ({1: 2}, InputDataTypeNotInAllowlistExc),
        (None, InputDataTypeNotInAllowlistExc),
        (b'', InputDataTypeNotInAllowlistExc),
        (b'\x00', InputDataTypeNotInAllowlistExc),
        (b'\x01', InputDataTypeNotInAllowlistExc),
        (b'123', InputDataTypeNotInAllowlistExc),
        (b'-123', InputDataTypeNotInAllowlistExc),
        (b'123.123', InputDataTypeNotInAllowlistExc),
        (b'-123.123', InputDataTypeNotInAllowlistExc),
        (int, InputDataTypeNotInAllowlistExc),
        (theoretical_testutils.EmptyObject, InputDataTypeNotInAllowlistExc),
        (datetime.datetime.now(), InputDataTypeNotInAllowlistExc),
        (datetime.datetime.now().date(), InputDataTypeNotInAllowlistExc),
        (datetime.datetime.now().time(), InputDataTypeNotInAllowlistExc),
        (ipaddress.ip_address("127.0.0.1"), InputDataTypeNotInAllowlistExc),
        (ipaddress.ip_address("::1"), InputDataTypeNotInAllowlistExc),
        (ipaddress.ip_network("127.0.0.0/8"), InputDataTypeNotInAllowlistExc),
        (ipaddress.ip_network("2001:db8::/32"), InputDataTypeNotInAllowlistExc),
        (urllib.parse.urlparse("https://www.google.com/test"), InputDataTypeNotInAllowlistExc),
        (uuid.UUID('{12345678-1234-5678-1234-567812345678}'), InputDataTypeNotInAllowlistExc),
        (theoretical_testutils.EmptyObject(), InputDataTypeNotInAllowlistExc),
        (FloatableObject(123.999), InputDataTypeNotInAllowlistExc),
        (FloatableObject(123), InputDataTypeNotInAllowlistExc),
        (FloatableObject(True), InputDataTypeNotInAllowlistExc),
        (FloatableObject("123.999"), InputDataTypeNotInAllowlistExc),
        (FloatableObject(None), InputDataTypeNotInAllowlistExc),
        (FloatableObject([]), InputDataTypeNotInAllowlistExc),
        (FloatableObject(theoretical_testutils.EmptyObject()), InputDataTypeNotInAllowlistExc),
        (ExceptionRaisingFloatableObject(), InputDataTypeNotInAllowlistExc)
    )),
    (FloatBlueprint(parsing_mode=ParsingMode.MODE_STRICT), (
        (0.0, expected_output_float_value("0.0")),
        (-0.0, expected_output_float_value("0.0")),
        (1.0, expected_output_float_value("1.0")),
        (-1.0, expected_output_float_value("-1.0")),
        (123.456, expected_output_float_value("123.456")),
        (-123.456, expected_output_float_value("-123.456")),
        (float("nan"), InvalidInputDataExc),
        (float("+NAN"), InvalidInputDataExc),
        (float("-NAN"), InvalidInputDataExc),
        (float("inf"), InvalidInputDataExc),
        (float("+INFINITY"), InvalidInputDataExc),
        (float("-INFINITY"), InvalidInputDataExc),
        (0, InputDataTypeNotInAllowlistExc),
        (-0, InputDataTypeNotInAllowlistExc),
        (1, InputDataTypeNotInAllowlistExc),
        (-1, InputDataTypeNotInAllowlistExc),
        (123, InputDataTypeNotInAllowlistExc),
        (-123, InputDataTypeNotInAllowlistExc),
        (True, InputDataTypeNotInAllowlistExc),
        (False, InputDataTypeNotInAllowlistExc),
        ("0.0", InputDataTypeNotInAllowlistExc),
        ("+0.0", InputDataTypeNotInAllowlistExc),
        ("-0.0", InputDataTypeNotInAllowlistExc),
        ("1.0", InputDataTypeNotInAllowlistExc),
        ("+1.0", InputDataTypeNotInAllowlistExc),
        ("-1.0", InputDataTypeNotInAllowlistExc),
        ("123.456", InputDataTypeNotInAllowlistExc),
        ("+123.456", InputDataTypeNotInAllowlistExc),
        ("-123.456", InputDataTypeNotInAllowlistExc),
        ("000123.456", InputDataTypeNotInAllowlistExc),
        ("+000123.456", InputDataTypeNotInAllowlistExc),
        ("-000123.456", InputDataTypeNotInAllowlistExc),
        ("123.456000", InputDataTypeNotInAllowlistExc),
        ("+123.456000", InputDataTypeNotInAllowlistExc),
        ("-123.456000", InputDataTypeNotInAllowlistExc),
        ("000123.456000", InputDataTypeNotInAllowlistExc),
        ("+000123.456000", InputDataTypeNotInAllowlistExc),
        ("-000123.456000", InputDataTypeNotInAllowlistExc),
        ("nan", InputDataTypeNotInAllowlistExc),
        ("+NAN", InputDataTypeNotInAllowlistExc),
        ("-NAN", InputDataTypeNotInAllowlistExc),
        ("inf", InputDataTypeNotInAllowlistExc),
        ("+INFINITY", InputDataTypeNotInAllowlistExc),
        ("-INFINITY", InputDataTypeNotInAllowlistExc),
        ("0", InputDataTypeNotInAllowlistExc),
        ("+0", InputDataTypeNotInAllowlistExc),
        ("-0", InputDataTypeNotInAllowlistExc),
        ("1", InputDataTypeNotInAllowlistExc),
        ("+1", InputDataTypeNotInAllowlistExc),
        ("-1", InputDataTypeNotInAllowlistExc),
        ("123", InputDataTypeNotInAllowlistExc),
        ("+123", InputDataTypeNotInAllowlistExc),
        ("-123", InputDataTypeNotInAllowlistExc),
        ("000123", InputDataTypeNotInAllowlistExc),
        ("+000123", InputDataTypeNotInAllowlistExc),
        ("-000123", InputDataTypeNotInAllowlistExc),
        ("123_000", InputDataTypeNotInAllowlistExc),
        ("+123_000", InputDataTypeNotInAllowlistExc),
        ("-123_000", InputDataTypeNotInAllowlistExc),
        ("1e6", InputDataTypeNotInAllowlistExc),
        ("+1e6", InputDataTypeNotInAllowlistExc),
        ("-1e6", InputDataTypeNotInAllowlistExc),
        ("123.0", InputDataTypeNotInAllowlistExc),
        ("123,0", InputDataTypeNotInAllowlistExc),
        ("+123.0", InputDataTypeNotInAllowlistExc),
        ("+123,0", InputDataTypeNotInAllowlistExc),
        ("-123.0", InputDataTypeNotInAllowlistExc),
        ("-123,0", InputDataTypeNotInAllowlistExc),
        ("\r\n777.888\t", InputDataTypeNotInAllowlistExc),
        ("  555 ", InputDataTypeNotInAllowlistExc),
        ("888,1337", InputDataTypeNotInAllowlistExc),
        ("   444,987\n", InputDataTypeNotInAllowlistExc),
        ("1337.", InputDataTypeNotInAllowlistExc),
        (".2337", InputDataTypeNotInAllowlistExc),
        ("1337,", InputDataTypeNotInAllowlistExc),
        (",2337", InputDataTypeNotInAllowlistExc),
        ("  1337.\n", InputDataTypeNotInAllowlistExc),
        ("\t.2337\r\n", InputDataTypeNotInAllowlistExc),
        ("\r\n1337,   ", InputDataTypeNotInAllowlistExc),
        ("\f\f ,2337\v", InputDataTypeNotInAllowlistExc),
        ("+1337.", InputDataTypeNotInAllowlistExc),
        ("+.2337", InputDataTypeNotInAllowlistExc),
        ("+1337,", InputDataTypeNotInAllowlistExc),
        ("+,2337", InputDataTypeNotInAllowlistExc),
        ("  +1337.\n", InputDataTypeNotInAllowlistExc),
        ("\t+.2337\r\n", InputDataTypeNotInAllowlistExc),
        ("\r\n+1337,   ", InputDataTypeNotInAllowlistExc),
        ("\f\f +,2337\v", InputDataTypeNotInAllowlistExc),
        ("-1337.", InputDataTypeNotInAllowlistExc),
        ("-.2337", InputDataTypeNotInAllowlistExc),
        ("-1337,", InputDataTypeNotInAllowlistExc),
        ("-,2337", InputDataTypeNotInAllowlistExc),
        ("  -1337.\n", InputDataTypeNotInAllowlistExc),
        ("\t-.2337\r\n", InputDataTypeNotInAllowlistExc),
        ("\r\n-1337,   ", InputDataTypeNotInAllowlistExc),
        ("\f\f -,2337\v", InputDataTypeNotInAllowlistExc),
        ("", InputDataTypeNotInAllowlistExc),
        ("  \r ", InputDataTypeNotInAllowlistExc),
        ("hello", InputDataTypeNotInAllowlistExc),
        ("   hello world  ", InputDataTypeNotInAllowlistExc),
        (" n jnfmsdnk\tfasdfsaf\rcy ", InputDataTypeNotInAllowlistExc),
        ("\x00", InputDataTypeNotInAllowlistExc),
        (".", InputDataTypeNotInAllowlistExc),
        ("123..456", InputDataTypeNotInAllowlistExc),
        ("123..", InputDataTypeNotInAllowlistExc),
        ("..456", InputDataTypeNotInAllowlistExc),
        ("+.", InputDataTypeNotInAllowlistExc),
        ("+123..456", InputDataTypeNotInAllowlistExc),
        ("+123..", InputDataTypeNotInAllowlistExc),
        ("+..456", InputDataTypeNotInAllowlistExc),
        ("-.", InputDataTypeNotInAllowlistExc),
        ("-123..456", InputDataTypeNotInAllowlistExc),
        ("-123..", InputDataTypeNotInAllowlistExc),
        ("-..456", InputDataTypeNotInAllowlistExc),
        (",", InputDataTypeNotInAllowlistExc),
        ("123,,456", InputDataTypeNotInAllowlistExc),
        ("123,,", InputDataTypeNotInAllowlistExc),
        (",,456", InputDataTypeNotInAllowlistExc),
        ("+,", InputDataTypeNotInAllowlistExc),
        ("+123,,456", InputDataTypeNotInAllowlistExc),
        ("+123,,", InputDataTypeNotInAllowlistExc),
        ("+,,456", InputDataTypeNotInAllowlistExc),
        ("-,", InputDataTypeNotInAllowlistExc),
        ("-123,,456", InputDataTypeNotInAllowlistExc),
        ("-123,,", InputDataTypeNotInAllowlistExc),
        ("-,,456", InputDataTypeNotInAllowlistExc),
        ("+", InputDataTypeNotInAllowlistExc),
        ("-", InputDataTypeNotInAllowlistExc),
        ("++123.456", InputDataTypeNotInAllowlistExc),
        ("--123.456", InputDataTypeNotInAllowlistExc),
        ("123.456+", InputDataTypeNotInAllowlistExc),
        ("123.456-", InputDataTypeNotInAllowlistExc),
        ("++123,456", InputDataTypeNotInAllowlistExc),
        ("--123,456", InputDataTypeNotInAllowlistExc),
        ("123,456+", InputDataTypeNotInAllowlistExc),
        ("123,456-", InputDataTypeNotInAllowlistExc),
        ("123 456", InputDataTypeNotInAllowlistExc),
        ("123. 456", InputDataTypeNotInAllowlistExc),
        ("123 .456", InputDataTypeNotInAllowlistExc),
        ("123 . 456", InputDataTypeNotInAllowlistExc),
        ("123, 456", InputDataTypeNotInAllowlistExc),
        ("123 ,456", InputDataTypeNotInAllowlistExc),
        ("123 , 456", InputDataTypeNotInAllowlistExc),
        ("123.456\x00", InputDataTypeNotInAllowlistExc),
        ("123,456\x00", InputDataTypeNotInAllowlistExc),
        ("\x00123.456", InputDataTypeNotInAllowlistExc),
        ("\x00123,456", InputDataTypeNotInAllowlistExc),
        ("i123.456", InputDataTypeNotInAllowlistExc),
        ("123.456i", InputDataTypeNotInAllowlistExc),
        ("i123,456", InputDataTypeNotInAllowlistExc),
        ("123,456i", InputDataTypeNotInAllowlistExc),
        ("0x123", InputDataTypeNotInAllowlistExc),
        ("0o123", InputDataTypeNotInAllowlistExc),
        ("0b111", InputDataTypeNotInAllowlistExc),
        ([], InputDataTypeNotInAllowlistExc),
        ({}, InputDataTypeNotInAllowlistExc),
        ([1, 2], InputDataTypeNotInAllowlistExc),
        ({1: 2}, InputDataTypeNotInAllowlistExc),
        (None, InputDataTypeNotInAllowlistExc),
        (b'', InputDataTypeNotInAllowlistExc),
        (b'\x00', InputDataTypeNotInAllowlistExc),
        (b'\x01', InputDataTypeNotInAllowlistExc),
        (b'123', InputDataTypeNotInAllowlistExc),
        (b'-123', InputDataTypeNotInAllowlistExc),
        (b'123.123', InputDataTypeNotInAllowlistExc),
        (b'-123.123', InputDataTypeNotInAllowlistExc),
        (int, InputDataTypeNotInAllowlistExc),
        (theoretical_testutils.EmptyObject, InputDataTypeNotInAllowlistExc),
        (datetime.datetime.now(), InputDataTypeNotInAllowlistExc),
        (datetime.datetime.now().date(), InputDataTypeNotInAllowlistExc),
        (datetime.datetime.now().time(), InputDataTypeNotInAllowlistExc),
        (ipaddress.ip_address("127.0.0.1"), InputDataTypeNotInAllowlistExc),
        (ipaddress.ip_address("::1"), InputDataTypeNotInAllowlistExc),
        (ipaddress.ip_network("127.0.0.0/8"), InputDataTypeNotInAllowlistExc),
        (ipaddress.ip_network("2001:db8::/32"), InputDataTypeNotInAllowlistExc),
        (urllib.parse.urlparse("https://www.google.com/test"), InputDataTypeNotInAllowlistExc),
        (uuid.UUID('{12345678-1234-5678-1234-567812345678}'), InputDataTypeNotInAllowlistExc),
        (theoretical_testutils.EmptyObject(), InputDataTypeNotInAllowlistExc),
        (FloatableObject(123.999), InputDataTypeNotInAllowlistExc),
        (FloatableObject(123), InputDataTypeNotInAllowlistExc),
        (FloatableObject(True), InputDataTypeNotInAllowlistExc),
        (FloatableObject("123.999"), InputDataTypeNotInAllowlistExc),
        (FloatableObject(None), InputDataTypeNotInAllowlistExc),
        (FloatableObject([]), InputDataTypeNotInAllowlistExc),
        (FloatableObject(theoretical_testutils.EmptyObject()), InputDataTypeNotInAllowlistExc),
        (ExceptionRaisingFloatableObject(), InputDataTypeNotInAllowlistExc)
    )),
    (FloatBlueprint(parsing_mode=ParsingMode.MODE_LOOSE, allow_ieee754_special_values=True), (
        (0.0, expected_output_float_value("0.0")),
        (-0.0, expected_output_float_value("-0.0")),
        (1.0, expected_output_float_value("1.0")),
        (-1.0, expected_output_float_value("-1.0")),
        (123.456, expected_output_float_value("123.456")),
        (-123.456, expected_output_float_value("-123.456")),
        (float("nan"), expected_output_float_value("nan")),
        (float("+NAN"), expected_output_float_value("nan")),
        (float("-NAN"), expected_output_float_value("nan")),
        (float("inf"), expected_output_float_value("inf")),
        (float("+INFINITY"), expected_output_float_value("inf")),
        (float("-INFINITY"), expected_output_float_value("-inf")),
        (0, expected_output_float_value("0.0")),
        (-0, expected_output_float_value("0.0")),
        (1, expected_output_float_value("1.0")),
        (-1, expected_output_float_value("-1.0")),
        (123, expected_output_float_value("123.0")),
        (-123, expected_output_float_value("-123.0")),
        (True, expected_output_float_value("1.0")),
        (False, expected_output_float_value("0.0")),
        ("0.0", expected_output_float_value("0.0")),
        ("+0.0", expected_output_float_value("0.0")),
        ("-0.0", expected_output_float_value("-0.0")),
        ("1.0", expected_output_float_value("1.0")),
        ("+1.0", expected_output_float_value("1.0")),
        ("-1.0", expected_output_float_value("-1.0")),
        ("123.456", expected_output_float_value("123.456")),
        ("+123.456", expected_output_float_value("123.456")),
        ("-123.456", expected_output_float_value("-123.456")),
        ("000123.456", expected_output_float_value("123.456")),
        ("+000123.456", expected_output_float_value("123.456")),
        ("-000123.456", expected_output_float_value("-123.456")),
        ("123.456000", expected_output_float_value("123.456")),
        ("+123.456000", expected_output_float_value("123.456")),
        ("-123.456000", expected_output_float_value("-123.456")),
        ("000123.456000", expected_output_float_value("123.456")),
        ("+000123.456000", expected_output_float_value("123.456")),
        ("-000123.456000", expected_output_float_value("-123.456")),
        ("nan", expected_output_float_value("nan")),
        ("+NAN", expected_output_float_value("nan")),
        ("-NAN", expected_output_float_value("nan")),
        ("inf", expected_output_float_value("inf")),
        ("+INFINITY", expected_output_float_value("inf")),
        ("-INFINITY", expected_output_float_value("-inf")),
        ("0", expected_output_float_value("0.0")),
        ("+0", expected_output_float_value("0.0")),
        ("-0", expected_output_float_value("-0.0")),
        ("1", expected_output_float_value("1.0")),
        ("+1", expected_output_float_value("1.0")),
        ("-1", expected_output_float_value("-1.0")),
        ("123", expected_output_float_value("123.0")),
        ("+123", expected_output_float_value("123.0")),
        ("-123", expected_output_float_value("-123.0")),
        ("000123", expected_output_float_value("123.0")),
        ("+000123", expected_output_float_value("123.0")),
        ("-000123", expected_output_float_value("-123.0")),
        ("123_000", expected_output_float_value("123000.0")),
        ("+123_000", expected_output_float_value("123000.0")),
        ("-123_000", expected_output_float_value("-123000.0")),
        ("1e6", expected_output_float_value("1000000.0")),
        ("+1e6", expected_output_float_value("1000000.0")),
        ("-1e6", expected_output_float_value("-1000000.0")),
        ("123.0", expected_output_float_value("123.0")),
        ("123,0", expected_output_float_value("123.0")),
        ("+123.0", expected_output_float_value("123.0")),
        ("+123,0", expected_output_float_value("123.0")),
        ("-123.0", expected_output_float_value("-123.0")),
        ("-123,0", expected_output_float_value("-123.0")),
        ("\r\n777.888\t", expected_output_float_value("777.888")),
        ("  555 ", expected_output_float_value("555.0")),
        ("888,1337", expected_output_float_value("888.1337")),
        ("   444,987\n", expected_output_float_value("444.987")),
        ("1337.", expected_output_float_value("1337.0")),
        (".2337", expected_output_float_value("0.2337")),
        ("1337,", expected_output_float_value("1337.0")),
        (",2337", expected_output_float_value("0.2337")),
        ("  1337.\n", expected_output_float_value("1337.0")),
        ("\t.2337\r\n", expected_output_float_value("0.2337")),
        ("\r\n1337,   ", expected_output_float_value("1337.0")),
        ("\f\f ,2337\v", expected_output_float_value("0.2337")),
        ("+1337.", expected_output_float_value("1337.0")),
        ("+.2337", expected_output_float_value("0.2337")),
        ("+1337,", expected_output_float_value("1337.0")),
        ("+,2337", expected_output_float_value("0.2337")),
        ("  +1337.\n", expected_output_float_value("1337.0")),
        ("\t+.2337\r\n", expected_output_float_value("0.2337")),
        ("\r\n+1337,   ", expected_output_float_value("1337.0")),
        ("\f\f +,2337\v", expected_output_float_value("0.2337")),
        ("-1337.", expected_output_float_value("-1337.0")),
        ("-.2337", expected_output_float_value("-0.2337")),
        ("-1337,", expected_output_float_value("-1337.0")),
        ("-,2337", expected_output_float_value("-0.2337")),
        ("  -1337.\n", expected_output_float_value("-1337.0")),
        ("\t-.2337\r\n", expected_output_float_value("-0.2337")),
        ("\r\n-1337,   ", expected_output_float_value("-1337.0")),
        ("\f\f -,2337\v", expected_output_float_value("-0.2337")),
        ("", InputDataNotConvertibleExc),
        ("  \r ", InputDataNotConvertibleExc),
        ("hello", InputDataNotConvertibleExc),
        ("   hello world  ", InputDataNotConvertibleExc),
        (" n jnfmsdnk\tfasdfsaf\rcy ", InputDataNotConvertibleExc),
        ("\x00", InputDataNotConvertibleExc),
        (".", InputDataNotConvertibleExc),
        ("123..456", InputDataNotConvertibleExc),
        ("123..", InputDataNotConvertibleExc),
        ("..456", InputDataNotConvertibleExc),
        ("+.", InputDataNotConvertibleExc),
        ("+123..456", InputDataNotConvertibleExc),
        ("+123..", InputDataNotConvertibleExc),
        ("+..456", InputDataNotConvertibleExc),
        ("-.", InputDataNotConvertibleExc),
        ("-123..456", InputDataNotConvertibleExc),
        ("-123..", InputDataNotConvertibleExc),
        ("-..456", InputDataNotConvertibleExc),
        (",", InputDataNotConvertibleExc),
        ("123,,456", InputDataNotConvertibleExc),
        ("123,,", InputDataNotConvertibleExc),
        (",,456", InputDataNotConvertibleExc),
        ("+,", InputDataNotConvertibleExc),
        ("+123,,456", InputDataNotConvertibleExc),
        ("+123,,", InputDataNotConvertibleExc),
        ("+,,456", InputDataNotConvertibleExc),
        ("-,", InputDataNotConvertibleExc),
        ("-123,,456", InputDataNotConvertibleExc),
        ("-123,,", InputDataNotConvertibleExc),
        ("-,,456", InputDataNotConvertibleExc),
        ("+", InputDataNotConvertibleExc),
        ("-", InputDataNotConvertibleExc),
        ("++123.456", InputDataNotConvertibleExc),
        ("--123.456", InputDataNotConvertibleExc),
        ("123.456+", InputDataNotConvertibleExc),
        ("123.456-", InputDataNotConvertibleExc),
        ("++123,456", InputDataNotConvertibleExc),
        ("--123,456", InputDataNotConvertibleExc),
        ("123,456+", InputDataNotConvertibleExc),
        ("123,456-", InputDataNotConvertibleExc),
        ("123 456", InputDataNotConvertibleExc),
        ("123. 456", InputDataNotConvertibleExc),
        ("123 .456", InputDataNotConvertibleExc),
        ("123 . 456", InputDataNotConvertibleExc),
        ("123, 456", InputDataNotConvertibleExc),
        ("123 ,456", InputDataNotConvertibleExc),
        ("123 , 456", InputDataNotConvertibleExc),
        ("123.456\x00", InputDataNotConvertibleExc),
        ("123,456\x00", InputDataNotConvertibleExc),
        ("\x00123.456", InputDataNotConvertibleExc),
        ("\x00123,456", InputDataNotConvertibleExc),
        ("i123.456", InputDataNotConvertibleExc),
        ("123.456i", InputDataNotConvertibleExc),
        ("i123,456", InputDataNotConvertibleExc),
        ("123,456i", InputDataNotConvertibleExc),
        ("0x123", InputDataNotConvertibleExc),
        ("0o123", InputDataNotConvertibleExc),
        ("0b111", InputDataNotConvertibleExc),
        ([], InputDataNotConvertibleExc),
        ({}, InputDataNotConvertibleExc),
        ([1, 2], InputDataNotConvertibleExc),
        ({1: 2}, InputDataNotConvertibleExc),
        (None, InputDataNotConvertibleExc),
        (b'', InputDataNotConvertibleExc),
        (b'\x00', InputDataNotConvertibleExc),
        (b'\x01', InputDataNotConvertibleExc),
        (b'123', expected_output_float_value("123.0")),
        (b'-123', expected_output_float_value("-123.0")),
        (b'123.123', expected_output_float_value("123.123")),
        (b'-123.123', expected_output_float_value("-123.123")),
        (int, InputDataNotConvertibleExc),
        (theoretical_testutils.EmptyObject, InputDataNotConvertibleExc),
        (datetime.datetime.now(), InputDataNotConvertibleExc),
        (datetime.datetime.now().date(), InputDataNotConvertibleExc),
        (datetime.datetime.now().time(), InputDataNotConvertibleExc),
        (ipaddress.ip_address("127.0.0.1"), InputDataNotConvertibleExc),
        (ipaddress.ip_address("::1"), InputDataNotConvertibleExc),
        (ipaddress.ip_network("127.0.0.0/8"), InputDataNotConvertibleExc),
        (ipaddress.ip_network("2001:db8::/32"), InputDataNotConvertibleExc),
        (urllib.parse.urlparse("https://www.google.com/test"), InputDataNotConvertibleExc),
        (uuid.UUID('{12345678-1234-5678-1234-567812345678}'), InputDataNotConvertibleExc),
        (theoretical_testutils.EmptyObject(), InputDataNotConvertibleExc),
        (FloatableObject(123.999), expected_output_float_value("123.999")),
        (FloatableObject(123), InputDataNotConvertibleExc),
        (FloatableObject(True), InputDataNotConvertibleExc),
        (FloatableObject("123.999"), InputDataNotConvertibleExc),
        (FloatableObject(None), InputDataNotConvertibleExc),
        (FloatableObject([]), InputDataNotConvertibleExc),
        (FloatableObject(theoretical_testutils.EmptyObject()), InputDataNotConvertibleExc),
        (ExceptionRaisingFloatableObject(), InputDataNotConvertibleExc)
    )),
    (FloatBlueprint(allow_ieee754_special_values=False, filters=(NumberAbsoluteValueFilter(),)), (
        (12.345, expected_output_float_value("12.345")),
        (-12.345, expected_output_float_value("12.345")),
        (12, expected_output_float_value("12.0")),
        (-12, expected_output_float_value("12.0")),
        ("23.456", expected_output_float_value("23.456")),
        ("-23.456", expected_output_float_value("23.456")),
        ("23", expected_output_float_value("23.0")),
        ("-23", expected_output_float_value("23.0")),
        (float("inf"), InvalidInputDataExc),
        (float("-inf"), InvalidInputDataExc),
        (float("nan"), InvalidInputDataExc),
        (0.0, expected_output_float_value("0.0")),
        (-0.0, expected_output_float_value("0.0")),
        (theoretical_testutils.EmptyObject(), InputDataTypeNotInAllowlistExc),  # "Checks" if the blueprint is not affected by the filter
    )),
    (FloatBlueprint(allow_ieee754_special_values=True, filters=(NumberAbsoluteValueFilter(),)), (
        (12.345, expected_output_float_value("12.345")),
        (-12.345, expected_output_float_value("12.345")),
        (12, expected_output_float_value("12.0")),
        (-12, expected_output_float_value("12.0")),
        ("23.456", expected_output_float_value("23.456")),
        ("-23.456", expected_output_float_value("23.456")),
        ("23", expected_output_float_value("23.0")),
        ("-23", expected_output_float_value("23.0")),
        (float("inf"), expected_output_float_value("inf")),
        (float("-inf"), expected_output_float_value("inf")),
        (float("nan"), expected_output_float_value("nan")),
        (0.0, expected_output_float_value("0.0")),
        (-0.0, expected_output_float_value("0.0")),
        (theoretical_testutils.EmptyObject(), InputDataTypeNotInAllowlistExc),  # "Checks" if the blueprint is not affected by the filter
    )),
    (FloatBlueprint(allow_ieee754_special_values=False, filters=(NumberMaximumClampFilter(23.456),)), (
        (-10e9, expected_output_float_value("-10000000000.0")),
        (23, expected_output_float_value("23.0")),
        (23.455, expected_output_float_value("23.455")),
        (23.456, expected_output_float_value("23.456")),
        (23.457, expected_output_float_value("23.456")),
        (24, expected_output_float_value("23.456")),
        (10e9, expected_output_float_value("23.456")),
        ("-10e9", expected_output_float_value("-10000000000.0")),
        ("23", expected_output_float_value("23.0")),
        ("23.455", expected_output_float_value("23.455")),
        ("23.456", expected_output_float_value("23.456")),
        ("23.457", expected_output_float_value("23.456")),
        ("24", expected_output_float_value("23.456")),
        ("10e9", expected_output_float_value("23.456")),
        (float("inf"), InvalidInputDataExc),
        (float("-inf"), InvalidInputDataExc),
        (float("nan"), InvalidInputDataExc),
        (0.0, expected_output_float_value("0.0")),
        (-0.0, expected_output_float_value("0.0")),
        (theoretical_testutils.EmptyObject(), InputDataTypeNotInAllowlistExc),  # "Checks" if the blueprint is not affected by the filter
    )),
    (FloatBlueprint(allow_ieee754_special_values=True, filters=(NumberMaximumClampFilter(23.456),)), (
        (-10e9, expected_output_float_value("-10000000000.0")),
        (23, expected_output_float_value("23.0")),
        (23.455, expected_output_float_value("23.455")),
        (23.456, expected_output_float_value("23.456")),
        (23.457, expected_output_float_value("23.456")),
        (24, expected_output_float_value("23.456")),
        (10e9, expected_output_float_value("23.456")),
        ("-10e9", expected_output_float_value("-10000000000.0")),
        ("23", expected_output_float_value("23.0")),
        ("23.455", expected_output_float_value("23.455")),
        ("23.456", expected_output_float_value("23.456")),
        ("23.457", expected_output_float_value("23.456")),
        ("24", expected_output_float_value("23.456")),
        ("10e9", expected_output_float_value("23.456")),
        (float("inf"), expected_output_float_value("23.456")),
        (float("-inf"), expected_output_float_value("-inf")),
        (float("nan"), expected_output_float_value("nan")),
        (0.0, expected_output_float_value("0.0")),
        (-0.0, expected_output_float_value("-0.0")),
        (theoretical_testutils.EmptyObject(), InputDataTypeNotInAllowlistExc),  # "Checks" if the blueprint is not affected by the filter
    )),
    (FloatBlueprint(allow_ieee754_special_values=False, filters=(NumberMaximumClampFilter(5),)), (
        # This is an example of how NOT to use the filter (the filter's input data are of type 'float' and the 'maximum_value' is of type 'int').
        (-10.5, expected_output_float_value("-10.5")),
        (10, UnexpectedOutputDataTypeExc),
        (10.5, UnexpectedOutputDataTypeExc),
        (float("inf"), InvalidInputDataExc),
        (float("-inf"), InvalidInputDataExc),
        (float("nan"), InvalidInputDataExc),
        (0.0, expected_output_float_value("0.0")),
        (-0.0, expected_output_float_value("0.0")),
        (theoretical_testutils.EmptyObject(), InputDataTypeNotInAllowlistExc),  # "Checks" if the blueprint is not affected by the filter
    )),
    (FloatBlueprint(allow_ieee754_special_values=True, filters=(NumberMaximumClampFilter(5),)), (
        # This is an example of how NOT to use the filter (the filter's input data are of type 'float' and the 'maximum_value' is of type 'int').
        (-10.5, expected_output_float_value("-10.5")),
        (10, UnexpectedOutputDataTypeExc),
        (10.5, UnexpectedOutputDataTypeExc),
        (float("inf"), UnexpectedOutputDataTypeExc),
        (float("-inf"), expected_output_float_value("-inf")),
        (float("nan"), expected_output_float_value("nan")),
        (0.0, expected_output_float_value("0.0")),
        (-0.0, expected_output_float_value("-0.0")),
        (theoretical_testutils.EmptyObject(), InputDataTypeNotInAllowlistExc),  # "Checks" if the blueprint is not affected by the filter
    )),
    (FloatBlueprint(allow_ieee754_special_values=False, filters=(NumberMinimumClampFilter(23.456),)), (
        (-10e9, expected_output_float_value("23.456")),
        (23, expected_output_float_value("23.456")),
        (23.455, expected_output_float_value("23.456")),
        (23.456, expected_output_float_value("23.456")),
        (23.457, expected_output_float_value("23.457")),
        (24, expected_output_float_value("24.0")),
        (10e9, expected_output_float_value("10000000000.0")),
        ("-10e9", expected_output_float_value("23.456")),
        ("23", expected_output_float_value("23.456")),
        ("23.455", expected_output_float_value("23.456")),
        ("23.456", expected_output_float_value("23.456")),
        ("23.457", expected_output_float_value("23.457")),
        ("24", expected_output_float_value("24.0")),
        ("10e9", expected_output_float_value("10000000000.0")),
        (float("inf"), InvalidInputDataExc),
        (float("-inf"), InvalidInputDataExc),
        (float("nan"), InvalidInputDataExc),
        (0.0, expected_output_float_value("23.456")),
        (-0.0, expected_output_float_value("23.456")),
        (theoretical_testutils.EmptyObject(), InputDataTypeNotInAllowlistExc),  # "Checks" if the blueprint is not affected by the filter
    )),
    (FloatBlueprint(allow_ieee754_special_values=True, filters=(NumberMinimumClampFilter(23.456),)), (
        (-10e9, expected_output_float_value("23.456")),
        (23, expected_output_float_value("23.456")),
        (23.455, expected_output_float_value("23.456")),
        (23.456, expected_output_float_value("23.456")),
        (23.457, expected_output_float_value("23.457")),
        (24, expected_output_float_value("24.0")),
        (10e9, expected_output_float_value("10000000000.0")),
        ("-10e9", expected_output_float_value("23.456")),
        ("23", expected_output_float_value("23.456")),
        ("23.455", expected_output_float_value("23.456")),
        ("23.456", expected_output_float_value("23.456")),
        ("23.457", expected_output_float_value("23.457")),
        ("24", expected_output_float_value("24.0")),
        ("10e9", expected_output_float_value("10000000000.0")),
        (float("inf"), expected_output_float_value("inf")),
        (float("-inf"), expected_output_float_value("23.456")),
        (float("nan"), expected_output_float_value("nan")),
        (0.0, expected_output_float_value("23.456")),
        (-0.0, expected_output_float_value("23.456")),
        (theoretical_testutils.EmptyObject(), InputDataTypeNotInAllowlistExc),  # "Checks" if the blueprint is not affected by the filter
    )),
    (FloatBlueprint(allow_ieee754_special_values=False, filters=(NumberMinimumClampFilter(5),)), (
        # This is an example of how NOT to use the filter (the filter's input data are of type 'float' and the 'minimum_value' is of type 'int').
        (-10.5, UnexpectedOutputDataTypeExc),
        (10, expected_output_float_value("10.0")),
        (10.5, expected_output_float_value("10.5")),
        (float("inf"), InvalidInputDataExc),
        (float("-inf"), InvalidInputDataExc),
        (float("nan"), InvalidInputDataExc),
        (0.0, UnexpectedOutputDataTypeExc),
        (-0.0, UnexpectedOutputDataTypeExc),
        (theoretical_testutils.EmptyObject(), InputDataTypeNotInAllowlistExc),  # "Checks" if the blueprint is not affected by the filter
    )),
    (FloatBlueprint(allow_ieee754_special_values=True, filters=(NumberMinimumClampFilter(5),)), (
        # This is an example of how NOT to use the filter (the filter's input data are of type 'float' and the 'minimum_value' is of type 'int').
        (-10.5, UnexpectedOutputDataTypeExc),
        (10, expected_output_float_value("10.0")),
        (10.5, expected_output_float_value("10.5")),
        (float("inf"), expected_output_float_value("inf")),
        (float("-inf"), UnexpectedOutputDataTypeExc),
        (float("nan"), expected_output_float_value("nan")),
        (0.0, UnexpectedOutputDataTypeExc),
        (-0.0, UnexpectedOutputDataTypeExc),
        (theoretical_testutils.EmptyObject(), InputDataTypeNotInAllowlistExc),  # "Checks" if the blueprint is not affected by the filter
    )),
    (FloatBlueprint(allow_ieee754_special_values=False, filters=(NumberRoundFilter(-1),)), (
        (1234.5678, expected_output_float_value("1230.0")),
        (-1234.5678, expected_output_float_value("-1230.0")),
        ("1234.5678", expected_output_float_value("1230.0")),
        ("-1234.5678", expected_output_float_value("-1230.0")),
        (1234, expected_output_float_value("1230.0")),
        (-1234, expected_output_float_value("-1230.0")),
        ("1234", expected_output_float_value("1230.0")),
        ("-1234", expected_output_float_value("-1230.0")),
        (8765.4321, expected_output_float_value("8770.0")),
        (-8765.4321, expected_output_float_value("-8770.0")),
        ("8765.4321", expected_output_float_value("8770.0")),
        ("-8765.4321", expected_output_float_value("-8770.0")),
        (8765, expected_output_float_value("8760.0")),  # https://docs.python.org/3/library/functions.html#round
        (-8765, expected_output_float_value("-8760.0")),  # https://docs.python.org/3/library/functions.html#round
        ("8765", expected_output_float_value("8760.0")),  # https://docs.python.org/3/library/functions.html#round
        ("-8765", expected_output_float_value("-8760.0")),  # https://docs.python.org/3/library/functions.html#round
        (float("inf"), InvalidInputDataExc),
        (float("-inf"), InvalidInputDataExc),
        (float("nan"), InvalidInputDataExc),
        (0.0, expected_output_float_value("0.0")),
        (-0.0, expected_output_float_value("0.0")),
        (theoretical_testutils.EmptyObject(), InputDataTypeNotInAllowlistExc),  # "Checks" if the blueprint is not affected by the filter
    )),
    (FloatBlueprint(allow_ieee754_special_values=True, filters=(NumberRoundFilter(-1),)), (
        (1234.5678, expected_output_float_value("1230.0")),
        (-1234.5678, expected_output_float_value("-1230.0")),
        ("1234.5678", expected_output_float_value("1230.0")),
        ("-1234.5678", expected_output_float_value("-1230.0")),
        (1234, expected_output_float_value("1230.0")),
        (-1234, expected_output_float_value("-1230.0")),
        ("1234", expected_output_float_value("1230.0")),
        ("-1234", expected_output_float_value("-1230.0")),
        (8765.4321, expected_output_float_value("8770.0")),
        (-8765.4321, expected_output_float_value("-8770.0")),
        ("8765.4321", expected_output_float_value("8770.0")),
        ("-8765.4321", expected_output_float_value("-8770.0")),
        (8765, expected_output_float_value("8760.0")),  # https://docs.python.org/3/library/functions.html#round
        (-8765, expected_output_float_value("-8760.0")),  # https://docs.python.org/3/library/functions.html#round
        ("8765", expected_output_float_value("8760.0")),  # https://docs.python.org/3/library/functions.html#round
        ("-8765", expected_output_float_value("-8760.0")),  # https://docs.python.org/3/library/functions.html#round
        (float("inf"), expected_output_float_value("inf")),
        (float("-inf"), expected_output_float_value("-inf")),
        (float("nan"), expected_output_float_value("nan")),
        (0.0, expected_output_float_value("0.0")),
        (-0.0, expected_output_float_value("-0.0")),
        (theoretical_testutils.EmptyObject(), InputDataTypeNotInAllowlistExc),  # "Checks" if the blueprint is not affected by the filter
    )),
    (FloatBlueprint(allow_ieee754_special_values=False, filters=(NumberRoundFilter(0),)), (
        (1234.5678, expected_output_float_value("1235.0")),
        (-1234.5678, expected_output_float_value("-1235.0")),
        ("1234.5678", expected_output_float_value("1235.0")),
        ("-1234.5678", expected_output_float_value("-1235.0")),
        (1234, expected_output_float_value("1234.0")),
        (-1234, expected_output_float_value("-1234.0")),
        ("1234", expected_output_float_value("1234.0")),
        ("-1234", expected_output_float_value("-1234.0")),
        (8765.4321, expected_output_float_value("8765.0")),
        (-8765.4321, expected_output_float_value("-8765.0")),
        ("8765.4321", expected_output_float_value("8765.0")),
        ("-8765.4321", expected_output_float_value("-8765.0")),
        (8765, expected_output_float_value("8765.0")),
        (-8765, expected_output_float_value("-8765.0")),
        ("8765", expected_output_float_value("8765.0")),
        ("-8765", expected_output_float_value("-8765.0")),
        (float("inf"), InvalidInputDataExc),
        (float("-inf"), InvalidInputDataExc),
        (float("nan"), InvalidInputDataExc),
        (0.0, expected_output_float_value("0.0")),
        (-0.0, expected_output_float_value("0.0")),
        (theoretical_testutils.EmptyObject(), InputDataTypeNotInAllowlistExc),  # "Checks" if the blueprint is not affected by the filter
    )),
    (FloatBlueprint(allow_ieee754_special_values=True, filters=(NumberRoundFilter(0),)), (
        (1234.5678, expected_output_float_value("1235.0")),
        (-1234.5678, expected_output_float_value("-1235.0")),
        ("1234.5678", expected_output_float_value("1235.0")),
        ("-1234.5678", expected_output_float_value("-1235.0")),
        (1234, expected_output_float_value("1234.0")),
        (-1234, expected_output_float_value("-1234.0")),
        ("1234", expected_output_float_value("1234.0")),
        ("-1234", expected_output_float_value("-1234.0")),
        (8765.4321, expected_output_float_value("8765.0")),
        (-8765.4321, expected_output_float_value("-8765.0")),
        ("8765.4321", expected_output_float_value("8765.0")),
        ("-8765.4321", expected_output_float_value("-8765.0")),
        (8765, expected_output_float_value("8765.0")),
        (-8765, expected_output_float_value("-8765.0")),
        ("8765", expected_output_float_value("8765.0")),
        ("-8765", expected_output_float_value("-8765.0")),
        (float("inf"), expected_output_float_value("inf")),
        (float("-inf"), expected_output_float_value("-inf")),
        (float("nan"), expected_output_float_value("nan")),
        (0.0, expected_output_float_value("0.0")),
        (-0.0, expected_output_float_value("-0.0")),
        (theoretical_testutils.EmptyObject(), InputDataTypeNotInAllowlistExc),  # "Checks" if the blueprint is not affected by the filter
    )),
    (FloatBlueprint(allow_ieee754_special_values=False, filters=(NumberRoundFilter(1),)), (
        (1234.5678, expected_output_float_value("1234.6")),
        (-1234.5678, expected_output_float_value("-1234.6")),
        ("1234.5678", expected_output_float_value("1234.6")),
        ("-1234.5678", expected_output_float_value("-1234.6")),
        (1234, expected_output_float_value("1234.0")),
        (-1234, expected_output_float_value("-1234.0")),
        ("1234", expected_output_float_value("1234.0")),
        ("-1234", expected_output_float_value("-1234.0")),
        (8765.4321, expected_output_float_value("8765.4")),
        (-8765.4321, expected_output_float_value("-8765.4")),
        ("8765.4321", expected_output_float_value("8765.4")),
        ("-8765.4321", expected_output_float_value("-8765.4")),
        (8765, expected_output_float_value("8765.0")),
        (-8765, expected_output_float_value("-8765.0")),
        ("8765", expected_output_float_value("8765.0")),
        ("-8765", expected_output_float_value("-8765.0")),
        (float("inf"), InvalidInputDataExc),
        (float("-inf"), InvalidInputDataExc),
        (float("nan"), InvalidInputDataExc),
        (0.0, expected_output_float_value("0.0")),
        (-0.0, expected_output_float_value("0.0")),
        (theoretical_testutils.EmptyObject(), InputDataTypeNotInAllowlistExc),  # "Checks" if the blueprint is not affected by the filter
    )),
    (FloatBlueprint(allow_ieee754_special_values=True, filters=(NumberRoundFilter(1),)), (
        (1234.5678, expected_output_float_value("1234.6")),
        (-1234.5678, expected_output_float_value("-1234.6")),
        ("1234.5678", expected_output_float_value("1234.6")),
        ("-1234.5678", expected_output_float_value("-1234.6")),
        (1234, expected_output_float_value("1234.0")),
        (-1234, expected_output_float_value("-1234.0")),
        ("1234", expected_output_float_value("1234.0")),
        ("-1234", expected_output_float_value("-1234.0")),
        (8765.4321, expected_output_float_value("8765.4")),
        (-8765.4321, expected_output_float_value("-8765.4")),
        ("8765.4321", expected_output_float_value("8765.4")),
        ("-8765.4321", expected_output_float_value("-8765.4")),
        (8765, expected_output_float_value("8765.0")),
        (-8765, expected_output_float_value("-8765.0")),
        ("8765", expected_output_float_value("8765.0")),
        ("-8765", expected_output_float_value("-8765.0")),
        (float("inf"), expected_output_float_value("inf")),
        (float("-inf"), expected_output_float_value("-inf")),
        (float("nan"), expected_output_float_value("nan")),
        (0.0, expected_output_float_value("0.0")),
        (-0.0, expected_output_float_value("-0.0")),
        (theoretical_testutils.EmptyObject(), InputDataTypeNotInAllowlistExc),  # "Checks" if the blueprint is not affected by the filter
    )),
    (FloatBlueprint(allow_ieee754_special_values=False, validators=(NumberMaximumValueValidator(789.123),)), (
        (-10e12, expected_output_float_value("-10000000000000.0")),
        (789, expected_output_float_value("789.0")),
        (789.122, expected_output_float_value("789.122")),
        (789.123, expected_output_float_value("789.123")),
        (789.124, DataValidationFailedExc),
        (790, DataValidationFailedExc),
        (10e12, DataValidationFailedExc),
        ("-10e12", expected_output_float_value("-10000000000000.0")),
        ("789", expected_output_float_value("789.0")),
        ("789.122", expected_output_float_value("789.122")),
        ("789.123", expected_output_float_value("789.123")),
        ("789.124", DataValidationFailedExc),
        ("790", DataValidationFailedExc),
        ("10e12", DataValidationFailedExc),
        (float("inf"), InvalidInputDataExc),
        (float("-inf"), InvalidInputDataExc),
        (float("nan"), InvalidInputDataExc),
        (0.0, expected_output_float_value("0.0")),
        (-0.0, expected_output_float_value("0.0")),
        (theoretical_testutils.EmptyObject(), InputDataTypeNotInAllowlistExc),  # "Checks" if the blueprint is not affected by the validator
    )),
    (FloatBlueprint(allow_ieee754_special_values=True, validators=(NumberMaximumValueValidator(789.123),)), (
        (-10e12, expected_output_float_value("-10000000000000.0")),
        (789, expected_output_float_value("789.0")),
        (789.122, expected_output_float_value("789.122")),
        (789.123, expected_output_float_value("789.123")),
        (789.124, DataValidationFailedExc),
        (790, DataValidationFailedExc),
        (10e12, DataValidationFailedExc),
        ("-10e12", expected_output_float_value("-10000000000000.0")),
        ("789", expected_output_float_value("789.0")),
        ("789.122", expected_output_float_value("789.122")),
        ("789.123", expected_output_float_value("789.123")),
        ("789.124", DataValidationFailedExc),
        ("790", DataValidationFailedExc),
        ("10e12", DataValidationFailedExc),
        (float("inf"), DataValidationFailedExc),
        (float("-inf"), expected_output_float_value("-inf")),
        (float("nan"), expected_output_float_value("nan")),
        (0.0, expected_output_float_value("0.0")),
        (-0.0, expected_output_float_value("-0.0")),
        (theoretical_testutils.EmptyObject(), InputDataTypeNotInAllowlistExc),  # "Checks" if the blueprint is not affected by the validator
    )),
    (FloatBlueprint(allow_ieee754_special_values=False, validators=(NumberMaximumValueValidator(750),)), (
        # This is an example of how NOT to use the validator (the validator's input data are of type 'float' and the 'maximum_acceptable_number' is of type 'int').
        # Even though it works at the moment, there is NO GUARANTEE that it will work in the future!
        (749, expected_output_float_value("749.0")),
        (749.5, expected_output_float_value("749.5")),
        (750, expected_output_float_value("750.0")),
        (750.0, expected_output_float_value("750.0")),
        (750.5, DataValidationFailedExc),
        (751, DataValidationFailedExc),
        (float("inf"), InvalidInputDataExc),
        (float("-inf"), InvalidInputDataExc),
        (float("nan"), InvalidInputDataExc),
        (0.0, expected_output_float_value("0.0")),
        (-0.0, expected_output_float_value("0.0")),
        (theoretical_testutils.EmptyObject(), InputDataTypeNotInAllowlistExc),  # "Checks" if the blueprint is not affected by the validator
    )),
    (FloatBlueprint(allow_ieee754_special_values=True, validators=(NumberMaximumValueValidator(750),)), (
        # This is an example of how NOT to use the validator (the validator's input data are of type 'float' and the 'maximum_acceptable_number' is of type 'int').
        # Even though it works at the moment, there is NO GUARANTEE that it will work in the future!
        (749, expected_output_float_value("749.0")),
        (749.5, expected_output_float_value("749.5")),
        (750, expected_output_float_value("750.0")),
        (750.0, expected_output_float_value("750.0")),
        (750.5, DataValidationFailedExc),
        (751, DataValidationFailedExc),
        (float("inf"), DataValidationFailedExc),
        (float("-inf"), expected_output_float_value("-inf")),
        (float("nan"), expected_output_float_value("nan")),
        (0.0, expected_output_float_value("0.0")),
        (-0.0, expected_output_float_value("-0.0")),
        (theoretical_testutils.EmptyObject(), InputDataTypeNotInAllowlistExc),  # "Checks" if the blueprint is not affected by the validator
    )),
    (FloatBlueprint(allow_ieee754_special_values=False, validators=(NumberMinimumValueValidator(789.123),)), (
        (-10e12, DataValidationFailedExc),
        (789, DataValidationFailedExc),
        (789.122, DataValidationFailedExc),
        (789.123, expected_output_float_value("789.123")),
        (789.124, expected_output_float_value("789.124")),
        (790, expected_output_float_value("790.0")),
        (10e12, expected_output_float_value("10000000000000.0")),
        ("-10e12", DataValidationFailedExc),
        ("789", DataValidationFailedExc),
        ("789.122", DataValidationFailedExc),
        ("789.123", expected_output_float_value("789.123")),
        ("789.124", expected_output_float_value("789.124")),
        ("790", expected_output_float_value("790.0")),
        ("10e12", expected_output_float_value("10000000000000.0")),
        (float("inf"), InvalidInputDataExc),
        (float("-inf"), InvalidInputDataExc),
        (float("nan"), InvalidInputDataExc),
        (0.0, DataValidationFailedExc),
        (-0.0, DataValidationFailedExc),
        (theoretical_testutils.EmptyObject(), InputDataTypeNotInAllowlistExc),  # "Checks" if the blueprint is not affected by the validator
    )),
    (FloatBlueprint(allow_ieee754_special_values=True, validators=(NumberMinimumValueValidator(789.123),)), (
        (-10e12, DataValidationFailedExc),
        (789, DataValidationFailedExc),
        (789.122, DataValidationFailedExc),
        (789.123, expected_output_float_value("789.123")),
        (789.124, expected_output_float_value("789.124")),
        (790, expected_output_float_value("790.0")),
        (10e12, expected_output_float_value("10000000000000.0")),
        ("-10e12", DataValidationFailedExc),
        ("789", DataValidationFailedExc),
        ("789.122", DataValidationFailedExc),
        ("789.123", expected_output_float_value("789.123")),
        ("789.124", expected_output_float_value("789.124")),
        ("790", expected_output_float_value("790.0")),
        ("10e12", expected_output_float_value("10000000000000.0")),
        (float("inf"), expected_output_float_value("inf")),
        (float("-inf"), DataValidationFailedExc),
        (float("nan"), expected_output_float_value("nan")),
        (0.0, DataValidationFailedExc),
        (-0.0, DataValidationFailedExc),
        (theoretical_testutils.EmptyObject(), InputDataTypeNotInAllowlistExc),  # "Checks" if the blueprint is not affected by the validator
    )),
    (FloatBlueprint(allow_ieee754_special_values=False, validators=(NumberMinimumValueValidator(750),)), (
        # This is an example of how NOT to use the validator (the validator's input data are of type 'float' and the 'minimum_acceptable_number' is of type 'int').
        # Even though it works at the moment, there is NO GUARANTEE that it will work in the future!
        (749, DataValidationFailedExc),
        (749.5, DataValidationFailedExc),
        (750, expected_output_float_value("750.0")),
        (750.0, expected_output_float_value("750.0")),
        (750.5, expected_output_float_value("750.5")),
        (751, expected_output_float_value("751.0")),
        (float("inf"), InvalidInputDataExc),
        (float("-inf"), InvalidInputDataExc),
        (float("nan"), InvalidInputDataExc),
        (0.0, DataValidationFailedExc),
        (-0.0, DataValidationFailedExc),
        (theoretical_testutils.EmptyObject(), InputDataTypeNotInAllowlistExc),  # "Checks" if the blueprint is not affected by the validator
    )),
    (FloatBlueprint(allow_ieee754_special_values=True, validators=(NumberMinimumValueValidator(750),)), (
        # This is an example of how NOT to use the validator (the validator's input data are of type 'float' and the 'minimum_acceptable_number' is of type 'int').
        # Even though it works at the moment, there is NO GUARANTEE that it will work in the future!
        (749, DataValidationFailedExc),
        (749.5, DataValidationFailedExc),
        (750, expected_output_float_value("750.0")),
        (750.0, expected_output_float_value("750.0")),
        (750.5, expected_output_float_value("750.5")),
        (751, expected_output_float_value("751.0")),
        (float("inf"), expected_output_float_value("inf")),
        (float("-inf"), DataValidationFailedExc),
        (float("nan"), expected_output_float_value("nan")),
        (0.0, DataValidationFailedExc),
        (-0.0, DataValidationFailedExc),
        (theoretical_testutils.EmptyObject(), InputDataTypeNotInAllowlistExc),  # "Checks" if the blueprint is not affected by the validator
    )),
    (FloatBlueprint(
        allow_ieee754_special_values=False,
        filters=(NumberAbsoluteValueFilter(), NumberRoundFilter(1)),
        validators=(NumberMinimumValueValidator(10.5), NumberMaximumValueValidator(20.5))
    ), (
        (-10, DataValidationFailedExc),
        (-10.44, DataValidationFailedExc),
        (-10.46, expected_output_float_value("10.5")),
        (-10.5, expected_output_float_value("10.5")),
        (-10.54, expected_output_float_value("10.5")),
        (-10.56, expected_output_float_value("10.6")),
        (-11, expected_output_float_value("11.0")),
        (-20, expected_output_float_value("20.0")),
        (-20.44, expected_output_float_value("20.4")),
        (-20.46, expected_output_float_value("20.5")),
        (-20.5, expected_output_float_value("20.5")),
        (-20.54, expected_output_float_value("20.5")),
        (-20.56, DataValidationFailedExc),
        (-21, DataValidationFailedExc),
        (10, DataValidationFailedExc),
        (10.44, DataValidationFailedExc),
        (10.46, expected_output_float_value("10.5")),
        (10.5, expected_output_float_value("10.5")),
        (10.54, expected_output_float_value("10.5")),
        (10.56, expected_output_float_value("10.6")),
        (11, expected_output_float_value("11.0")),
        (20, expected_output_float_value("20.0")),
        (20.44, expected_output_float_value("20.4")),
        (20.46, expected_output_float_value("20.5")),
        (20.5, expected_output_float_value("20.5")),
        (20.54, expected_output_float_value("20.5")),
        (20.56, DataValidationFailedExc),
        (21, DataValidationFailedExc),
        (float("inf"), InvalidInputDataExc),
        (float("-inf"), InvalidInputDataExc),
        (float("nan"), InvalidInputDataExc),
        (0.0, DataValidationFailedExc),
        (-0.0, DataValidationFailedExc),
        (theoretical_testutils.EmptyObject(), InputDataTypeNotInAllowlistExc),  # "Checks" if the blueprint is not affected by the filters & validators
    )),
    (FloatBlueprint(
        allow_ieee754_special_values=True,
        filters=(NumberAbsoluteValueFilter(), NumberRoundFilter(1)),
        validators=(NumberMinimumValueValidator(10.5), NumberMaximumValueValidator(20.5))
    ), (
        (-10, DataValidationFailedExc),
        (-10.44, DataValidationFailedExc),
        (-10.46, expected_output_float_value("10.5")),
        (-10.5, expected_output_float_value("10.5")),
        (-10.54, expected_output_float_value("10.5")),
        (-10.56, expected_output_float_value("10.6")),
        (-11, expected_output_float_value("11.0")),
        (-20, expected_output_float_value("20.0")),
        (-20.44, expected_output_float_value("20.4")),
        (-20.46, expected_output_float_value("20.5")),
        (-20.5, expected_output_float_value("20.5")),
        (-20.54, expected_output_float_value("20.5")),
        (-20.56, DataValidationFailedExc),
        (-21, DataValidationFailedExc),
        (10, DataValidationFailedExc),
        (10.44, DataValidationFailedExc),
        (10.46, expected_output_float_value("10.5")),
        (10.5, expected_output_float_value("10.5")),
        (10.54, expected_output_float_value("10.5")),
        (10.56, expected_output_float_value("10.6")),
        (11, expected_output_float_value("11.0")),
        (20, expected_output_float_value("20.0")),
        (20.44, expected_output_float_value("20.4")),
        (20.46, expected_output_float_value("20.5")),
        (20.5, expected_output_float_value("20.5")),
        (20.54, expected_output_float_value("20.5")),
        (20.56, DataValidationFailedExc),
        (21, DataValidationFailedExc),
        (float("inf"), DataValidationFailedExc),
        (float("-inf"), DataValidationFailedExc),
        (float("nan"), expected_output_float_value("nan")),
        (0.0, DataValidationFailedExc),
        (-0.0, DataValidationFailedExc),
        (theoretical_testutils.EmptyObject(), InputDataTypeNotInAllowlistExc),  # "Checks" if the blueprint is not affected by the filters & validators
    )),
)


@pytest.mark.parametrize(("blueprint", "input_", "output"), theoretical_testutils.test_function_parameter_generator(__FLOAT_BLUEPRINT_TEST_SUITE))
def test_float_blueprint(blueprint, input_, output):
    theoretical_testutils.perform_test(blueprint, input_, output)


def test_float_blueprint_default_parsing_mode():
    assert FloatBlueprint().get_parsing_mode() == ParsingMode.MODE_RATIONAL


def test_float_blueprint_are_ieee754_special_values_forbidden_by_default():
    assert FloatBlueprint().are_ieee754_special_values_allowed() is False


def test_float_blueprint_instance_attributes():
    filter_seq = (NumberAbsoluteValueFilter(), NumberMaximumClampFilter(333_000.1), NumberMinimumClampFilter(101_010.1), NumberRoundFilter(2))
    validator_seq = (NumberMaximumValueValidator(200_000.1), NumberMinimumValueValidator(150_000.1))
    float_bp = FloatBlueprint(allow_ieee754_special_values=True, filters=filter_seq, validators=validator_seq)

    assert (float_bp.are_ieee754_special_values_allowed() is True) and (float_bp.get_filters() == filter_seq) and (float_bp.get_validators() == validator_seq)


def test_number_maximum_clamp_filter_maximum_value():
    assert NumberMaximumClampFilter(222.1).get_maximum_value() == 222.1


@pytest.mark.parametrize("value", (float("inf"), float("-inf"), float("nan")))
def test_number_maximum_clamp_filter_invalid_maximum_value(value):
    with pytest.raises(InvalidFilterConfigError):
        NumberMaximumClampFilter(value)


def test_number_minimum_clamp_filter_minimum_value():
    assert NumberMinimumClampFilter(333.1).get_minimum_value() == 333.1


@pytest.mark.parametrize("value", (float("inf"), float("-inf"), float("nan")))
def test_number_minimum_clamp_filter_invalid_minimum_value(value):
    with pytest.raises(InvalidFilterConfigError):
        NumberMinimumClampFilter(value)


def test_number_round_filter_decimal_places():
    assert NumberRoundFilter(8).get_decimal_places() == 8


def test_number_maximum_value_validator_maximum_acceptable_number():
    assert NumberMaximumValueValidator(444.1).get_maximum_acceptable_number() == 444.1


@pytest.mark.parametrize("number", (float("inf"), float("-inf"), float("nan")))
def test_number_maximum_value_validator_invalid_maximum_acceptable_number(number):
    with pytest.raises(InvalidValidatorConfigError):
        NumberMaximumValueValidator(number)


def test_number_minimum_value_validator_minimum_acceptable_number():
    assert NumberMinimumValueValidator(555.1).get_minimum_acceptable_number() == 555.1


@pytest.mark.parametrize("number", (float("inf"), float("-inf"), float("nan")))
def test_number_minimum_value_validator_invalid_minimum_acceptable_number(number):
    with pytest.raises(InvalidValidatorConfigError):
        NumberMinimumValueValidator(number)
